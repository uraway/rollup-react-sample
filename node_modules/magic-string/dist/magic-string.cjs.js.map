{"version":3,"file":"magic-string.cjs.js","sources":["../src/index.js","../src/Bundle/index.js","../src/utils/hasOwnProp.js","../src/MagicString/index.js","../src/utils/getRelativePath.js","../src/MagicString/encodeMappings.js","../src/MagicString/guessIndent.js","../src/utils/SourceMap.js","../src/utils/btoa.js"],"sourcesContent":["import MagicString from './MagicString/index';\nimport Bundle from './Bundle/index';\n\nMagicString.Bundle = Bundle;\n\nexport default MagicString;\n","import MagicString from '../MagicString/index';\nimport SourceMap from '../utils/SourceMap';\nimport getRelativePath from '../utils/getRelativePath';\nimport hasOwnProp from '../utils/hasOwnProp';\n\nclass Bundle {\n\tconstructor ( options = {} ) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.outro = options.outro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\t\tthis.sources = [];\n\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( typeof source !== 'object' || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( option => {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( `Illegal source: same filename (${source.filename}), different contents` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t}\n\n\tappend ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\toutro: this.outro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( source => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateMap ( options ) {\n\t\tlet offsets = {};\n\n\t\tlet names = [];\n\t\tthis.sources.forEach( source => {\n\t\t\tObject.keys( source.content.nameLocations ).forEach( location => {\n\t\t\t\tconst name = source.content.nameLocations[ location ];\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tconst encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( ( source, i ) => {\n\t\t\t\tconst prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tlet mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tconst sourceIndex = this.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' ) +\n\t\t\tgetSemis( this.outro )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( source => {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( source => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: encoded\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\tlet indentStringCounts = {};\n\n\t\tthis.sources.forEach( source => {\n\t\t\tconst indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( ( a, b ) => {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t}\n\n\tindent ( indentStr ) {\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.str.slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, ( match, index ) => {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\tthis.outro = this.outro.replace( /^[^\\n]/gm, indentStr + '$&' );\n\n\t\treturn this;\n\t}\n\n\tprepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString () {\n\t\tconst body = this.sources.map( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tlet str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body + this.outro;\n\t}\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t}\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tlet source; // TODO put inside loop if safe\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart();\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\t\tthis.outro = this.outro.replace( rx, '' );\n\n\t\tif ( !this.outro ) {\n\t\t\tlet source;\n\t\t\tlet i = this.sources.length - 1;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimEnd(charType);\n\t\t\t\ti -= 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nexport default Bundle;\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n","export default Object.prototype.hasOwnProperty;","import SourceMap from '../utils/SourceMap';\nimport guessIndent from './guessIndent';\nimport encodeMappings from './encodeMappings';\nimport getRelativePath from '../utils/getRelativePath';\n\nlet warned = false;\n\nclass MagicString {\n\tconstructor ( string, options = {} ) {\n\t\tObject.defineProperties( this, {\n\t\t\toriginal:              { writable: true, value: string },\n\t\t\tstr:                   { writable: true, value: string },\n\t\t\tmappings:              { writable: true, value: initMappings( string.length ) },\n\t\t\tfilename:              { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\t\tnameLocations:         { writable: true, value: {} },\n\t\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t\t});\n\t}\n\n\taddSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t}\n\n\tappend ( content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'appended content must be a string' );\n\t\t}\n\n\t\tthis.str += content;\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tlet clone = new MagicString( this.original, { filename: this.filename });\n\t\tclone.str = this.str;\n\n\t\tlet i = clone.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tclone.mappings[i] = this.mappings[i];\n\t\t}\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tclone.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( range => [ range.start, range.end ] );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( loc => {\n\t\t\tclone.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn clone;\n\t}\n\n\tgenerateMap ( options ) {\n\t\toptions = options || {};\n\n\t\tlet names = [];\n\t\tObject.keys( this.nameLocations ).forEach( location => {\n\t\t\tconst name = this.nameLocations[ location ];\n\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t});\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tgetMappings ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.str, this.mappings, hires, this.sourcemapLocations, sourceIndex, offsets, names, this.nameLocations );\n\t}\n\n\tindent ( indentStr, options ) {\n\t\tconst mappings = this.mappings;\n\t\tconst reverseMappings = reverse( mappings, this.str.length );\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( typeof indentStr === 'object' ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tlet exclusions;\n\n\t\tif ( options.exclude ) {\n\t\t\texclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\n\t\t\texclusions = exclusions.map( range => {\n\t\t\t\tconst rangeStart = this.locate( range[0] );\n\t\t\t\tconst rangeEnd = this.locate( range[1] );\n\n\t\t\t\tif ( rangeStart === null || rangeEnd === null ) {\n\t\t\t\t\tthrow new Error( 'Cannot use indices of replaced characters as exclusion ranges' );\n\t\t\t\t}\n\n\t\t\t\treturn [ rangeStart, rangeEnd ];\n\t\t\t});\n\n\t\t\texclusions.sort( ( a, b ) => a[0] - b[0] );\n\n\t\t\t// check for overlaps\n\t\t\tlastEnd = -1;\n\t\t\texclusions.forEach( range => {\n\t\t\t\tif ( range[0] < lastEnd ) {\n\t\t\t\t\tthrow new Error( 'Exclusion ranges cannot overlap' );\n\t\t\t\t}\n\n\t\t\t\tlastEnd = range[1];\n\t\t\t});\n\t\t}\n\n\t\tconst indentStart = options.indentStart !== false;\n\t\tlet inserts = [];\n\n\t\tif ( !exclusions ) {\n\t\t\tthis.str = this.str.replace( pattern, ( match, index ) => {\n\t\t\t\tif ( !indentStart && index === 0 ) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\n\t\t\t\tinserts.push( index );\n\t\t\t\treturn indentStr + match;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.str = this.str.replace( pattern, ( match, index ) => {\n\t\t\t\tif ( ( !indentStart && index === 0 ) || isExcluded( index - 1 ) ) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\n\t\t\t\tinserts.push( index );\n\t\t\t\treturn indentStr + match;\n\t\t\t});\n\t\t}\n\n\t\tconst adjustments = inserts.map( index => {\n\t\t\tlet origin;\n\n\t\t\tdo {\n\t\t\t\torigin = reverseMappings[ index++ ];\n\t\t\t} while ( !~origin && index < this.str.length );\n\n\t\t\treturn origin;\n\t\t});\n\n\t\tlet i = adjustments.length;\n\t\tlet lastEnd = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tadjust( this.mappings, adjustments[i], lastEnd, ( ( i + 1 ) * indentStr.length ) );\n\t\t\tlastEnd = adjustments[i];\n\t\t}\n\n\t\treturn this;\n\n\t\tfunction isExcluded ( index ) {\n\t\t\tlet i = exclusions.length;\n\t\t\tlet range;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\trange = exclusions[i];\n\n\t\t\t\tif ( range[1] < index ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ( range[0] <= index ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tinsert ( index, content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'inserted content must be a string' );\n\t\t}\n\n\t\tif ( index === this.original.length ) {\n\t\t\tthis.append( content );\n\t\t} else {\n\t\t\tconst mapped = this.locate( index );\n\n\t\t\tif ( mapped === null ) {\n\t\t\t\tthrow new Error( 'Cannot insert at replaced character index: ' + index );\n\t\t\t}\n\n\t\t\tthis.str = this.str.substr( 0, mapped ) + content + this.str.substr( mapped );\n\t\t\tadjust( this.mappings, index, this.mappings.length, content.length );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// get current location of character in original string\n\tlocate ( character ) {\n\t\tif ( character < 0 || character > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tconst loc = this.mappings[ character ];\n\t\treturn ~loc ? loc : null;\n\t}\n\n\tlocateOrigin ( character ) {\n\t\tif ( character < 0 || character >= this.str.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tlet i = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( this.mappings[i] === character ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\toverwrite ( start, end, content, storeName ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'replacement content must be a string' );\n\t\t}\n\n\t\tconst firstChar = this.locate( start );\n\t\tconst lastChar = this.locate( end - 1 );\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( `Cannot overwrite the same content twice: '${this.original.slice(start, end).replace(/\\n/g, '\\\\n')}'` );\n\t\t}\n\n\t\tif ( firstChar > lastChar + 1 ) {\n\t\t\tthrow new Error(\n\t\t\t\t'BUG! First character mapped to a position after the last character: ' +\n\t\t\t\t'[' + start + ', ' + end + '] -> [' + firstChar + ', ' + ( lastChar + 1 ) + ']'\n\t\t\t);\n\t\t}\n\n\t\tif ( storeName ) {\n\t\t\tthis.nameLocations[ start ] = this.original.slice( start, end );\n\t\t}\n\n\t\tthis.str = this.str.substr( 0, firstChar ) + content + this.str.substring( lastChar + 1 );\n\n\t\tconst d = content.length - ( lastChar + 1 - firstChar );\n\n\t\tblank( this.mappings, start, end );\n\t\tadjust( this.mappings, end, this.mappings.length, d );\n\t\treturn this;\n\t}\n\n\tprepend ( content ) {\n\t\tthis.str = content + this.str;\n\t\tadjust( this.mappings, 0, this.mappings.length, content.length );\n\t\treturn this;\n\t}\n\n\tremove ( start, end ) {\n\t\tif ( start < 0 || end > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tlet currentStart = -1;\n\t\tlet currentEnd = -1;\n\t\tfor ( let i = start; i < end; i += 1 ) {\n\t\t\tconst loc = this.mappings[i];\n\n\t\t\tif ( ~loc ) {\n\t\t\t\tif ( !~currentStart ) currentStart = loc;\n\n\t\t\t\tcurrentEnd = loc + 1;\n\t\t\t\tthis.mappings[i] = -1;\n\t\t\t}\n\t\t}\n\n\t\tthis.str = this.str.slice( 0, currentStart ) + this.str.slice( currentEnd );\n\n\t\tadjust( this.mappings, end, this.mappings.length, currentStart - currentEnd );\n\t\treturn this;\n\t}\n\n\treplace ( start, end, content ) {\n\t\tif ( !warned ) {\n\t\t\tconsole.warn( 'magicString.replace(...) is deprecated. Use magicString.overwrite(...) instead' );\n\t\t\twarned = true;\n\t\t}\n\n\t\treturn this.overwrite( start, end, content );\n\t}\n\n\tslice ( start, end = this.original.length ) {\n\t\twhile ( start < 0 ) start += this.original.length;\n\t\twhile ( end < 0 ) end += this.original.length;\n\n\t\tconst firstChar = this.locate( start );\n\t\tconst lastChar = this.locate( end - 1 );\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( 'Cannot use replaced characters as slice anchors' );\n\t\t}\n\n\t\treturn this.str.slice( firstChar, lastChar + 1 );\n\t}\n\n\tsnip ( start, end ) {\n\t\tconst clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t}\n\n\ttoString () {\n\t\treturn this.str;\n\t}\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim (charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEnd (charType) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.str = this.str.replace( rx, ( trailing, index, str ) => {\n\t\t\tconst strLength = str.length;\n\t\t\tconst length = trailing.length;\n\n\t\t\tlet chars = [];\n\n\t\t\tlet i = strLength;\n\t\t\twhile ( i-- > strLength - length ) {\n\t\t\t\tchars.push( this.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tthis.mappings[ chars[i] ] = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n\n\ttrimStart (charType) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.str = this.str.replace( rx, leading => {\n\t\t\tconst length = leading.length;\n\n\t\t\tlet chars = [];\n\t\t\tlet adjustmentStart = 0;\n\n\t\t\tlet i = length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tchars.push( this.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tthis.mappings[ chars[i] ] = -1;\n\t\t\t\t\tadjustmentStart += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tadjust( this.mappings, adjustmentStart, this.mappings.length, -length );\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n}\n\nfunction adjust ( mappings, start, end, d ) {\n\tif ( !d ) return; // replacement is same length as replaced string\n\n\tlet i = end;\n\twhile ( i-- > start ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tmappings[i] += d;\n\t\t}\n\t}\n}\n\nfunction initMappings ( i ) {\n\tlet mappings = new Uint32Array( i );\n\n\twhile ( i-- ) mappings[i] = i;\n\treturn mappings;\n}\n\nfunction blank ( mappings, start, i ) {\n\twhile ( i-- > start ) mappings[i] = -1;\n}\n\nfunction reverse ( mappings, i ) {\n\tlet result = new Uint32Array( i );\n\n\twhile ( i-- ) {\n\t\tresult[i] = -1;\n\t}\n\n\tlet location;\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tlocation = mappings[i];\n\n\t\tif ( ~location ) {\n\t\t\tresult[ location ] = i;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport default MagicString;\n","export default function getRelativePath ( from, to ) {\n\tlet fromParts = from.split( /[\\/\\\\]/ );\n\tlet toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tlet i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n","import { encode } from 'vlq';\n\nexport default function encodeMappings ( original, str, mappings, hires, sourcemapLocations, sourceIndex, offsets, names, nameLocations ) {\n\t// store locations, for fast lookup\n\tlet lineStart = 0;\n\tconst locations = original.split( '\\n' ).map( line => {\n\t\tconst start = lineStart;\n\t\tlineStart += line.length + 1; // +1 for the newline\n\n\t\treturn start;\n\t});\n\n\tconst inverseMappings = invert( str, mappings );\n\n\tlet charOffset = 0;\n\tconst lines = str.split( '\\n' ).map( line => {\n\t\tlet segments = [];\n\n\t\tlet char; // TODO put these inside loop, once we've determined it's safe to do so transpilation-wise\n\t\tlet origin;\n\t\tlet lastOrigin = -1;\n\t\tlet location;\n\t\tlet nameIndex;\n\n\t\tlet i;\n\n\t\tconst len = line.length;\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tchar = i + charOffset;\n\t\t\torigin = inverseMappings[ char ];\n\n\t\t\tnameIndex = -1;\n\t\t\tlocation = null;\n\n\t\t\t// if this character has no mapping, but the last one did,\n\t\t\t// create a new segment\n\t\t\tif ( !~origin && ~lastOrigin ) {\n\t\t\t\tlocation = getLocation( locations, lastOrigin + 1 );\n\n\t\t\t\tif ( ( lastOrigin + 1 ) in nameLocations ) nameIndex = names.indexOf( nameLocations[ lastOrigin + 1 ] );\n\t\t\t}\n\n\t\t\telse if ( ~origin && ( hires || ( ~lastOrigin && origin !== lastOrigin + 1 ) || sourcemapLocations[ origin ] ) ) {\n\t\t\t\tlocation = getLocation( locations, origin );\n\t\t\t}\n\n\t\t\tif ( location ) {\n\t\t\t\tsegments.push({\n\t\t\t\t\tgeneratedCodeColumn: i,\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tsourceCodeLine: location.line,\n\t\t\t\t\tsourceCodeColumn: location.column,\n\t\t\t\t\tsourceCodeName: nameIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlastOrigin = origin;\n\t\t}\n\n\t\tcharOffset += line.length + 1;\n\t\treturn segments;\n\t});\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tconst encoded = lines.map( segments => {\n\t\tlet generatedCodeColumn = 0;\n\n\t\treturn segments.map( segment => {\n\t\t\tlet arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n\n\nfunction invert ( str, mappings ) {\n\tlet inverted = new Uint32Array( str.length );\n\n\t// initialise everything to -1\n\tlet i = str.length;\n\twhile ( i-- ) {\n\t\tinverted[i] = -1;\n\t}\n\n\t// then apply the actual mappings\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tinverted[ mappings[i] ] = i;\n\t\t}\n\t}\n\n\treturn inverted;\n}\n\nfunction getLocation ( locations, char ) {\n\tlet i = locations.length;\n\twhile ( i-- ) {\n\t\tif ( locations[i] <= char ) {\n\t\t\treturn {\n\t\t\t\tline: i,\n\t\t\t\tcolumn: char - locations[i]\n\t\t\t};\n\t\t}\n\t}\n\n\tthrow new Error( 'Character out of bounds' );\n}\n","export default function guessIndent ( code ) {\n\tconst lines = code.split( '\\n' );\n\n\tconst tabbed = lines.filter( line => /^\\t+/.test( line ) );\n\tconst spaced = lines.filter( line => /^ {2,}/.test( line ) );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce( ( previous, current ) => {\n\t\tconst numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n","import btoa from './btoa';\n\nclass SourceMap {\n\tconstructor ( properties ) {\n\t\tthis.version = 3;\n\n\t\tthis.file           = properties.file;\n\t\tthis.sources        = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names          = properties.names;\n\t\tthis.mappings       = properties.mappings;\n\t}\n\n\ttoString () {\n\t\treturn JSON.stringify( this );\n\t}\n\n\ttoUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n}\n\nexport default SourceMap;\n","let _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t/* global Buffer */\n\t_btoa = str => new Buffer( str ).toString( 'base64' );\n} else {\n\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n}\n\nexport default _btoa;\n"],"names":[],"mappings":"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"}