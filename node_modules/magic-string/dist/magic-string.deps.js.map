{"version":3,"file":"magic-string.deps.js","sources":["../src/index.js","../src/Bundle/index.js","../src/utils/hasOwnProp.js","../src/MagicString/index.js","../src/utils/getRelativePath.js","../src/MagicString/encodeMappings.js","../node_modules/vlq/src/vlq.js","../src/MagicString/guessIndent.js","../src/utils/SourceMap.js","../src/utils/btoa.js"],"sourcesContent":["import MagicString from './MagicString/index';\nimport Bundle from './Bundle/index';\n\nMagicString.Bundle = Bundle;\n\nexport default MagicString;\n","import MagicString from '../MagicString/index';\nimport SourceMap from '../utils/SourceMap';\nimport getRelativePath from '../utils/getRelativePath';\nimport hasOwnProp from '../utils/hasOwnProp';\n\nclass Bundle {\n\tconstructor ( options = {} ) {\n\t\tthis.intro = options.intro || '';\n\t\tthis.outro = options.outro || '';\n\t\tthis.separator = options.separator !== undefined ? options.separator : '\\n';\n\n\t\tthis.sources = [];\n\n\t\tthis.uniqueSources = [];\n\t\tthis.uniqueSourceIndexByFilename = {};\n\t}\n\n\taddSource ( source ) {\n\t\tif ( source instanceof MagicString ) {\n\t\t\treturn this.addSource({\n\t\t\t\tcontent: source,\n\t\t\t\tfilename: source.filename,\n\t\t\t\tseparator: this.separator\n\t\t\t});\n\t\t}\n\n\t\tif ( typeof source !== 'object' || !source.content ) {\n\t\t\tthrow new Error( 'bundle.addSource() takes an object with a `content` property, which should be an instance of MagicString, and an optional `filename`' );\n\t\t}\n\n\t\t[ 'filename', 'indentExclusionRanges', 'separator' ].forEach( option => {\n\t\t\tif ( !hasOwnProp.call( source, option ) ) source[ option ] = source.content[ option ];\n\t\t});\n\n\t\tif ( source.separator === undefined ) { // TODO there's a bunch of this sort of thing, needs cleaning up\n\t\t\tsource.separator = this.separator;\n\t\t}\n\n\t\tif ( source.filename ) {\n\t\t\tif ( !hasOwnProp.call( this.uniqueSourceIndexByFilename, source.filename ) ) {\n\t\t\t\tthis.uniqueSourceIndexByFilename[ source.filename ] = this.uniqueSources.length;\n\t\t\t\tthis.uniqueSources.push({ filename: source.filename, content: source.content.original });\n\t\t\t} else {\n\t\t\t\tconst uniqueSource = this.uniqueSources[ this.uniqueSourceIndexByFilename[ source.filename ] ];\n\t\t\t\tif ( source.content.original !== uniqueSource.content ) {\n\t\t\t\t\tthrow new Error( `Illegal source: same filename (${source.filename}), different contents` );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tthis.sources.push( source );\n\t\treturn this;\n\t}\n\n\tappend ( str, options ) {\n\t\tthis.addSource({\n\t\t\tcontent: new MagicString( str ),\n\t\t\tseparator: ( options && options.separator ) || ''\n\t\t});\n\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tconst bundle = new Bundle({\n\t\t\tintro: this.intro,\n\t\t\toutro: this.outro,\n\t\t\tseparator: this.separator\n\t\t});\n\n\t\tthis.sources.forEach( source => {\n\t\t\tbundle.addSource({\n\t\t\t\tfilename: source.filename,\n\t\t\t\tcontent: source.content.clone(),\n\t\t\t\tseparator: source.separator\n\t\t\t});\n\t\t});\n\n\t\treturn bundle;\n\t}\n\n\tgenerateMap ( options ) {\n\t\tlet offsets = {};\n\n\t\tlet names = [];\n\t\tthis.sources.forEach( source => {\n\t\t\tObject.keys( source.content.nameLocations ).forEach( location => {\n\t\t\t\tconst name = source.content.nameLocations[ location ];\n\t\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t\t});\n\t\t});\n\n\t\tconst encoded = (\n\t\t\tgetSemis( this.intro ) +\n\t\t\tthis.sources.map( ( source, i ) => {\n\t\t\t\tconst prefix = ( i > 0 ) ? ( getSemis( source.separator ) || ',' ) : '';\n\t\t\t\tlet mappings;\n\n\t\t\t\t// we don't bother encoding sources without a filename\n\t\t\t\tif ( !source.filename ) {\n\t\t\t\t\tmappings = getSemis( source.content.toString() );\n\t\t\t\t} else {\n\t\t\t\t\tconst sourceIndex = this.uniqueSourceIndexByFilename[ source.filename ];\n\t\t\t\t\tmappings = source.content.getMappings( options.hires, sourceIndex, offsets, names );\n\t\t\t\t}\n\n\t\t\t\treturn prefix + mappings;\n\t\t\t}).join( '' ) +\n\t\t\tgetSemis( this.outro )\n\t\t);\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: this.uniqueSources.map( source => {\n\t\t\t\treturn options.file ? getRelativePath( options.file, source.filename ) : source.filename;\n\t\t\t}),\n\t\t\tsourcesContent: this.uniqueSources.map( source => {\n\t\t\t\treturn options.includeContent ? source.content : null;\n\t\t\t}),\n\t\t\tnames,\n\t\t\tmappings: encoded\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\tlet indentStringCounts = {};\n\n\t\tthis.sources.forEach( source => {\n\t\t\tconst indentStr = source.content.indentStr;\n\n\t\t\tif ( indentStr === null ) return;\n\n\t\t\tif ( !indentStringCounts[ indentStr ] ) indentStringCounts[ indentStr ] = 0;\n\t\t\tindentStringCounts[ indentStr ] += 1;\n\t\t});\n\n\t\treturn ( Object.keys( indentStringCounts ).sort( ( a, b ) => {\n\t\t\treturn indentStringCounts[a] - indentStringCounts[b];\n\t\t})[0] ) || '\\t';\n\t}\n\n\tindent ( indentStr ) {\n\t\tif ( !arguments.length ) {\n\t\t\tindentStr = this.getIndentString();\n\t\t}\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\tlet trailingNewline = !this.intro || this.intro.slice( -1 ) === '\\n';\n\n\t\tthis.sources.forEach( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tconst indentStart = trailingNewline || ( i > 0 && /\\r?\\n$/.test( separator ) );\n\n\t\t\tsource.content.indent( indentStr, {\n\t\t\t\texclude: source.indentExclusionRanges,\n\t\t\t\tindentStart//: trailingNewline || /\\r?\\n$/.test( separator )  //true///\\r?\\n/.test( separator )\n\t\t\t});\n\n\t\t\ttrailingNewline = source.content.str.slice( 0, -1 ) === '\\n';\n\t\t});\n\n\t\tif ( this.intro ) {\n\t\t\tthis.intro = indentStr + this.intro.replace( /^[^\\n]/gm, ( match, index ) => {\n\t\t\t\treturn index > 0 ? indentStr + match : match;\n\t\t\t});\n\t\t}\n\n\t\tthis.outro = this.outro.replace( /^[^\\n]/gm, indentStr + '$&' );\n\n\t\treturn this;\n\t}\n\n\tprepend ( str ) {\n\t\tthis.intro = str + this.intro;\n\t\treturn this;\n\t}\n\n\ttoString () {\n\t\tconst body = this.sources.map( ( source, i ) => {\n\t\t\tconst separator = source.separator !== undefined ? source.separator : this.separator;\n\t\t\tlet str = ( i > 0 ? separator : '' ) + source.content.toString();\n\n\t\t\treturn str;\n\t\t}).join( '' );\n\n\t\treturn this.intro + body + this.outro;\n\t}\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim ( charType ) {\n\t\treturn this.trimStart( charType ).trimEnd( charType );\n\t}\n\n\ttrimStart ( charType ) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\t\tthis.intro = this.intro.replace( rx, '' );\n\n\t\tif ( !this.intro ) {\n\t\t\tlet source; // TODO put inside loop if safe\n\t\t\tlet i = 0;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.outro = this.outro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimStart();\n\t\t\t\ti += 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\ttrimEnd ( charType ) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\t\tthis.outro = this.outro.replace( rx, '' );\n\n\t\tif ( !this.outro ) {\n\t\t\tlet source;\n\t\t\tlet i = this.sources.length - 1;\n\n\t\t\tdo {\n\t\t\t\tsource = this.sources[i];\n\n\t\t\t\tif ( !source ) {\n\t\t\t\t\tthis.intro = this.intro.replace( rx, '' );\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tsource.content.trimEnd(charType);\n\t\t\t\ti -= 1;\n\t\t\t} while ( source.content.str === '' );\n\t\t}\n\n\t\treturn this;\n\t}\n}\n\nexport default Bundle;\n\nfunction getSemis ( str ) {\n\treturn new Array( str.split( '\\n' ).length ).join( ';' );\n}\n","export default Object.prototype.hasOwnProperty;","import SourceMap from '../utils/SourceMap';\nimport guessIndent from './guessIndent';\nimport encodeMappings from './encodeMappings';\nimport getRelativePath from '../utils/getRelativePath';\n\nlet warned = false;\n\nclass MagicString {\n\tconstructor ( string, options = {} ) {\n\t\tObject.defineProperties( this, {\n\t\t\toriginal:              { writable: true, value: string },\n\t\t\tstr:                   { writable: true, value: string },\n\t\t\tmappings:              { writable: true, value: initMappings( string.length ) },\n\t\t\tfilename:              { writable: true, value: options.filename },\n\t\t\tindentExclusionRanges: { writable: true, value: options.indentExclusionRanges },\n\t\t\tsourcemapLocations:    { writable: true, value: {} },\n\t\t\tnameLocations:         { writable: true, value: {} },\n\t\t\tindentStr:             { writable: true, value: guessIndent( string ) }\n\t\t});\n\t}\n\n\taddSourcemapLocation ( char ) {\n\t\tthis.sourcemapLocations[ char ] = true;\n\t}\n\n\tappend ( content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'appended content must be a string' );\n\t\t}\n\n\t\tthis.str += content;\n\t\treturn this;\n\t}\n\n\tclone () {\n\t\tlet clone = new MagicString( this.original, { filename: this.filename });\n\t\tclone.str = this.str;\n\n\t\tlet i = clone.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tclone.mappings[i] = this.mappings[i];\n\t\t}\n\n\t\tif ( this.indentExclusionRanges ) {\n\t\t\tclone.indentExclusionRanges = typeof this.indentExclusionRanges[0] === 'number' ?\n\t\t\t\t[ this.indentExclusionRanges[0], this.indentExclusionRanges[1] ] :\n\t\t\t\tthis.indentExclusionRanges.map( range => [ range.start, range.end ] );\n\t\t}\n\n\t\tObject.keys( this.sourcemapLocations ).forEach( loc => {\n\t\t\tclone.sourcemapLocations[ loc ] = true;\n\t\t});\n\n\t\treturn clone;\n\t}\n\n\tgenerateMap ( options ) {\n\t\toptions = options || {};\n\n\t\tlet names = [];\n\t\tObject.keys( this.nameLocations ).forEach( location => {\n\t\t\tconst name = this.nameLocations[ location ];\n\t\t\tif ( !~names.indexOf( name ) ) names.push( name );\n\t\t});\n\n\t\treturn new SourceMap({\n\t\t\tfile: ( options.file ? options.file.split( /[\\/\\\\]/ ).pop() : null ),\n\t\t\tsources: [ options.source ? getRelativePath( options.file || '', options.source ) : null ],\n\t\t\tsourcesContent: options.includeContent ? [ this.original ] : [ null ],\n\t\t\tnames,\n\t\t\tmappings: this.getMappings( options.hires, 0, {}, names )\n\t\t});\n\t}\n\n\tgetIndentString () {\n\t\treturn this.indentStr === null ? '\\t' : this.indentStr;\n\t}\n\n\tgetMappings ( hires, sourceIndex, offsets, names ) {\n\t\treturn encodeMappings( this.original, this.str, this.mappings, hires, this.sourcemapLocations, sourceIndex, offsets, names, this.nameLocations );\n\t}\n\n\tindent ( indentStr, options ) {\n\t\tconst mappings = this.mappings;\n\t\tconst reverseMappings = reverse( mappings, this.str.length );\n\t\tconst pattern = /^[^\\r\\n]/gm;\n\n\t\tif ( typeof indentStr === 'object' ) {\n\t\t\toptions = indentStr;\n\t\t\tindentStr = undefined;\n\t\t}\n\n\t\tindentStr = indentStr !== undefined ? indentStr : ( this.indentStr || '\\t' );\n\n\t\tif ( indentStr === '' ) return this; // noop\n\n\t\toptions = options || {};\n\n\t\t// Process exclusion ranges\n\t\tlet exclusions;\n\n\t\tif ( options.exclude ) {\n\t\t\texclusions = typeof options.exclude[0] === 'number' ? [ options.exclude ] : options.exclude;\n\n\t\t\texclusions = exclusions.map( range => {\n\t\t\t\tconst rangeStart = this.locate( range[0] );\n\t\t\t\tconst rangeEnd = this.locate( range[1] );\n\n\t\t\t\tif ( rangeStart === null || rangeEnd === null ) {\n\t\t\t\t\tthrow new Error( 'Cannot use indices of replaced characters as exclusion ranges' );\n\t\t\t\t}\n\n\t\t\t\treturn [ rangeStart, rangeEnd ];\n\t\t\t});\n\n\t\t\texclusions.sort( ( a, b ) => a[0] - b[0] );\n\n\t\t\t// check for overlaps\n\t\t\tlastEnd = -1;\n\t\t\texclusions.forEach( range => {\n\t\t\t\tif ( range[0] < lastEnd ) {\n\t\t\t\t\tthrow new Error( 'Exclusion ranges cannot overlap' );\n\t\t\t\t}\n\n\t\t\t\tlastEnd = range[1];\n\t\t\t});\n\t\t}\n\n\t\tconst indentStart = options.indentStart !== false;\n\t\tlet inserts = [];\n\n\t\tif ( !exclusions ) {\n\t\t\tthis.str = this.str.replace( pattern, ( match, index ) => {\n\t\t\t\tif ( !indentStart && index === 0 ) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\n\t\t\t\tinserts.push( index );\n\t\t\t\treturn indentStr + match;\n\t\t\t});\n\t\t} else {\n\t\t\tthis.str = this.str.replace( pattern, ( match, index ) => {\n\t\t\t\tif ( ( !indentStart && index === 0 ) || isExcluded( index - 1 ) ) {\n\t\t\t\t\treturn match;\n\t\t\t\t}\n\n\t\t\t\tinserts.push( index );\n\t\t\t\treturn indentStr + match;\n\t\t\t});\n\t\t}\n\n\t\tconst adjustments = inserts.map( index => {\n\t\t\tlet origin;\n\n\t\t\tdo {\n\t\t\t\torigin = reverseMappings[ index++ ];\n\t\t\t} while ( !~origin && index < this.str.length );\n\n\t\t\treturn origin;\n\t\t});\n\n\t\tlet i = adjustments.length;\n\t\tlet lastEnd = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tadjust( this.mappings, adjustments[i], lastEnd, ( ( i + 1 ) * indentStr.length ) );\n\t\t\tlastEnd = adjustments[i];\n\t\t}\n\n\t\treturn this;\n\n\t\tfunction isExcluded ( index ) {\n\t\t\tlet i = exclusions.length;\n\t\t\tlet range;\n\n\t\t\twhile ( i-- ) {\n\t\t\t\trange = exclusions[i];\n\n\t\t\t\tif ( range[1] < index ) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t\tif ( range[0] <= index ) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tinsert ( index, content ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'inserted content must be a string' );\n\t\t}\n\n\t\tif ( index === this.original.length ) {\n\t\t\tthis.append( content );\n\t\t} else {\n\t\t\tconst mapped = this.locate( index );\n\n\t\t\tif ( mapped === null ) {\n\t\t\t\tthrow new Error( 'Cannot insert at replaced character index: ' + index );\n\t\t\t}\n\n\t\t\tthis.str = this.str.substr( 0, mapped ) + content + this.str.substr( mapped );\n\t\t\tadjust( this.mappings, index, this.mappings.length, content.length );\n\t\t}\n\n\t\treturn this;\n\t}\n\n\t// get current location of character in original string\n\tlocate ( character ) {\n\t\tif ( character < 0 || character > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tconst loc = this.mappings[ character ];\n\t\treturn ~loc ? loc : null;\n\t}\n\n\tlocateOrigin ( character ) {\n\t\tif ( character < 0 || character >= this.str.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tlet i = this.mappings.length;\n\t\twhile ( i-- ) {\n\t\t\tif ( this.mappings[i] === character ) {\n\t\t\t\treturn i;\n\t\t\t}\n\t\t}\n\n\t\treturn null;\n\t}\n\n\toverwrite ( start, end, content, storeName ) {\n\t\tif ( typeof content !== 'string' ) {\n\t\t\tthrow new TypeError( 'replacement content must be a string' );\n\t\t}\n\n\t\tconst firstChar = this.locate( start );\n\t\tconst lastChar = this.locate( end - 1 );\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( `Cannot overwrite the same content twice: '${this.original.slice(start, end).replace(/\\n/g, '\\\\n')}'` );\n\t\t}\n\n\t\tif ( firstChar > lastChar + 1 ) {\n\t\t\tthrow new Error(\n\t\t\t\t'BUG! First character mapped to a position after the last character: ' +\n\t\t\t\t'[' + start + ', ' + end + '] -> [' + firstChar + ', ' + ( lastChar + 1 ) + ']'\n\t\t\t);\n\t\t}\n\n\t\tif ( storeName ) {\n\t\t\tthis.nameLocations[ start ] = this.original.slice( start, end );\n\t\t}\n\n\t\tthis.str = this.str.substr( 0, firstChar ) + content + this.str.substring( lastChar + 1 );\n\n\t\tconst d = content.length - ( lastChar + 1 - firstChar );\n\n\t\tblank( this.mappings, start, end );\n\t\tadjust( this.mappings, end, this.mappings.length, d );\n\t\treturn this;\n\t}\n\n\tprepend ( content ) {\n\t\tthis.str = content + this.str;\n\t\tadjust( this.mappings, 0, this.mappings.length, content.length );\n\t\treturn this;\n\t}\n\n\tremove ( start, end ) {\n\t\tif ( start < 0 || end > this.mappings.length ) {\n\t\t\tthrow new Error( 'Character is out of bounds' );\n\t\t}\n\n\t\tlet currentStart = -1;\n\t\tlet currentEnd = -1;\n\t\tfor ( let i = start; i < end; i += 1 ) {\n\t\t\tconst loc = this.mappings[i];\n\n\t\t\tif ( ~loc ) {\n\t\t\t\tif ( !~currentStart ) currentStart = loc;\n\n\t\t\t\tcurrentEnd = loc + 1;\n\t\t\t\tthis.mappings[i] = -1;\n\t\t\t}\n\t\t}\n\n\t\tthis.str = this.str.slice( 0, currentStart ) + this.str.slice( currentEnd );\n\n\t\tadjust( this.mappings, end, this.mappings.length, currentStart - currentEnd );\n\t\treturn this;\n\t}\n\n\treplace ( start, end, content ) {\n\t\tif ( !warned ) {\n\t\t\tconsole.warn( 'magicString.replace(...) is deprecated. Use magicString.overwrite(...) instead' );\n\t\t\twarned = true;\n\t\t}\n\n\t\treturn this.overwrite( start, end, content );\n\t}\n\n\tslice ( start, end = this.original.length ) {\n\t\twhile ( start < 0 ) start += this.original.length;\n\t\twhile ( end < 0 ) end += this.original.length;\n\n\t\tconst firstChar = this.locate( start );\n\t\tconst lastChar = this.locate( end - 1 );\n\n\t\tif ( firstChar === null || lastChar === null ) {\n\t\t\tthrow new Error( 'Cannot use replaced characters as slice anchors' );\n\t\t}\n\n\t\treturn this.str.slice( firstChar, lastChar + 1 );\n\t}\n\n\tsnip ( start, end ) {\n\t\tconst clone = this.clone();\n\t\tclone.remove( 0, start );\n\t\tclone.remove( end, clone.original.length );\n\n\t\treturn clone;\n\t}\n\n\ttoString () {\n\t\treturn this.str;\n\t}\n\n\ttrimLines () {\n\t\treturn this.trim('[\\\\r\\\\n]');\n\t}\n\n\ttrim (charType) {\n\t\treturn this.trimStart(charType).trimEnd(charType);\n\t}\n\n\ttrimEnd (charType) {\n\t\tconst rx = new RegExp( ( charType || '\\\\s' ) + '+$' );\n\n\t\tthis.str = this.str.replace( rx, ( trailing, index, str ) => {\n\t\t\tconst strLength = str.length;\n\t\t\tconst length = trailing.length;\n\n\t\t\tlet chars = [];\n\n\t\t\tlet i = strLength;\n\t\t\twhile ( i-- > strLength - length ) {\n\t\t\t\tchars.push( this.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tthis.mappings[ chars[i] ] = -1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n\n\ttrimStart (charType) {\n\t\tconst rx = new RegExp( '^' + ( charType || '\\\\s' ) + '+' );\n\n\t\tthis.str = this.str.replace( rx, leading => {\n\t\t\tconst length = leading.length;\n\n\t\t\tlet chars = [];\n\t\t\tlet adjustmentStart = 0;\n\n\t\t\tlet i = length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tchars.push( this.locateOrigin( i ) );\n\t\t\t}\n\n\t\t\ti = chars.length;\n\t\t\twhile ( i-- ) {\n\t\t\t\tif ( chars[i] !== null ) {\n\t\t\t\t\tthis.mappings[ chars[i] ] = -1;\n\t\t\t\t\tadjustmentStart += 1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tadjust( this.mappings, adjustmentStart, this.mappings.length, -length );\n\n\t\t\treturn '';\n\t\t});\n\n\t\treturn this;\n\t}\n}\n\nfunction adjust ( mappings, start, end, d ) {\n\tif ( !d ) return; // replacement is same length as replaced string\n\n\tlet i = end;\n\twhile ( i-- > start ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tmappings[i] += d;\n\t\t}\n\t}\n}\n\nfunction initMappings ( i ) {\n\tlet mappings = new Uint32Array( i );\n\n\twhile ( i-- ) mappings[i] = i;\n\treturn mappings;\n}\n\nfunction blank ( mappings, start, i ) {\n\twhile ( i-- > start ) mappings[i] = -1;\n}\n\nfunction reverse ( mappings, i ) {\n\tlet result = new Uint32Array( i );\n\n\twhile ( i-- ) {\n\t\tresult[i] = -1;\n\t}\n\n\tlet location;\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tlocation = mappings[i];\n\n\t\tif ( ~location ) {\n\t\t\tresult[ location ] = i;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport default MagicString;\n","export default function getRelativePath ( from, to ) {\n\tlet fromParts = from.split( /[\\/\\\\]/ );\n\tlet toParts = to.split( /[\\/\\\\]/ );\n\n\tfromParts.pop(); // get dirname\n\n\twhile ( fromParts[0] === toParts[0] ) {\n\t\tfromParts.shift();\n\t\ttoParts.shift();\n\t}\n\n\tif ( fromParts.length ) {\n\t\tlet i = fromParts.length;\n\t\twhile ( i-- ) fromParts[i] = '..';\n\t}\n\n\treturn fromParts.concat( toParts ).join( '/' );\n}\n","import { encode } from 'vlq';\n\nexport default function encodeMappings ( original, str, mappings, hires, sourcemapLocations, sourceIndex, offsets, names, nameLocations ) {\n\t// store locations, for fast lookup\n\tlet lineStart = 0;\n\tconst locations = original.split( '\\n' ).map( line => {\n\t\tconst start = lineStart;\n\t\tlineStart += line.length + 1; // +1 for the newline\n\n\t\treturn start;\n\t});\n\n\tconst inverseMappings = invert( str, mappings );\n\n\tlet charOffset = 0;\n\tconst lines = str.split( '\\n' ).map( line => {\n\t\tlet segments = [];\n\n\t\tlet char; // TODO put these inside loop, once we've determined it's safe to do so transpilation-wise\n\t\tlet origin;\n\t\tlet lastOrigin = -1;\n\t\tlet location;\n\t\tlet nameIndex;\n\n\t\tlet i;\n\n\t\tconst len = line.length;\n\t\tfor ( i = 0; i < len; i += 1 ) {\n\t\t\tchar = i + charOffset;\n\t\t\torigin = inverseMappings[ char ];\n\n\t\t\tnameIndex = -1;\n\t\t\tlocation = null;\n\n\t\t\t// if this character has no mapping, but the last one did,\n\t\t\t// create a new segment\n\t\t\tif ( !~origin && ~lastOrigin ) {\n\t\t\t\tlocation = getLocation( locations, lastOrigin + 1 );\n\n\t\t\t\tif ( ( lastOrigin + 1 ) in nameLocations ) nameIndex = names.indexOf( nameLocations[ lastOrigin + 1 ] );\n\t\t\t}\n\n\t\t\telse if ( ~origin && ( hires || ( ~lastOrigin && origin !== lastOrigin + 1 ) || sourcemapLocations[ origin ] ) ) {\n\t\t\t\tlocation = getLocation( locations, origin );\n\t\t\t}\n\n\t\t\tif ( location ) {\n\t\t\t\tsegments.push({\n\t\t\t\t\tgeneratedCodeColumn: i,\n\t\t\t\t\tsourceIndex,\n\t\t\t\t\tsourceCodeLine: location.line,\n\t\t\t\t\tsourceCodeColumn: location.column,\n\t\t\t\t\tsourceCodeName: nameIndex\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tlastOrigin = origin;\n\t\t}\n\n\t\tcharOffset += line.length + 1;\n\t\treturn segments;\n\t});\n\n\toffsets.sourceIndex = offsets.sourceIndex || 0;\n\toffsets.sourceCodeLine = offsets.sourceCodeLine || 0;\n\toffsets.sourceCodeColumn = offsets.sourceCodeColumn || 0;\n\toffsets.sourceCodeName = offsets.sourceCodeName || 0;\n\n\tconst encoded = lines.map( segments => {\n\t\tlet generatedCodeColumn = 0;\n\n\t\treturn segments.map( segment => {\n\t\t\tlet arr = [\n\t\t\t\tsegment.generatedCodeColumn - generatedCodeColumn,\n\t\t\t\tsegment.sourceIndex - offsets.sourceIndex,\n\t\t\t\tsegment.sourceCodeLine - offsets.sourceCodeLine,\n\t\t\t\tsegment.sourceCodeColumn - offsets.sourceCodeColumn\n\t\t\t];\n\n\t\t\tgeneratedCodeColumn = segment.generatedCodeColumn;\n\t\t\toffsets.sourceIndex = segment.sourceIndex;\n\t\t\toffsets.sourceCodeLine = segment.sourceCodeLine;\n\t\t\toffsets.sourceCodeColumn = segment.sourceCodeColumn;\n\n\t\t\tif ( ~segment.sourceCodeName ) {\n\t\t\t\tarr.push( segment.sourceCodeName - offsets.sourceCodeName );\n\t\t\t\toffsets.sourceCodeName = segment.sourceCodeName;\n\t\t\t}\n\n\t\t\treturn encode( arr );\n\t\t}).join( ',' );\n\t}).join( ';' );\n\n\treturn encoded;\n}\n\n\nfunction invert ( str, mappings ) {\n\tlet inverted = new Uint32Array( str.length );\n\n\t// initialise everything to -1\n\tlet i = str.length;\n\twhile ( i-- ) {\n\t\tinverted[i] = -1;\n\t}\n\n\t// then apply the actual mappings\n\ti = mappings.length;\n\twhile ( i-- ) {\n\t\tif ( ~mappings[i] ) {\n\t\t\tinverted[ mappings[i] ] = i;\n\t\t}\n\t}\n\n\treturn inverted;\n}\n\nfunction getLocation ( locations, char ) {\n\tlet i = locations.length;\n\twhile ( i-- ) {\n\t\tif ( locations[i] <= char ) {\n\t\t\treturn {\n\t\t\t\tline: i,\n\t\t\t\tcolumn: char - locations[i]\n\t\t\t};\n\t\t}\n\t}\n\n\tthrow new Error( 'Character out of bounds' );\n}\n","var charToInteger = {};\nvar integerToChar = {};\n\n'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='.split( '' ).forEach( function ( char, i ) {\n\tcharToInteger[ char ] = i;\n\tintegerToChar[ i ] = char;\n});\n\nexport function decode ( string ) {\n\tvar result = [],\n\t\tlen = string.length,\n\t\ti,\n\t\thasContinuationBit,\n\t\tshift = 0,\n\t\tvalue = 0,\n\t\tinteger,\n\t\tshouldNegate;\n\n\tfor ( i = 0; i < len; i += 1 ) {\n\t\tinteger = charToInteger[ string[i] ];\n\n\t\tif ( integer === undefined ) {\n\t\t\tthrow new Error( 'Invalid character (' + string[i] + ')' );\n\t\t}\n\n\t\thasContinuationBit = integer & 32;\n\n\t\tinteger &= 31;\n\t\tvalue += integer << shift;\n\n\t\tif ( hasContinuationBit ) {\n\t\t\tshift += 5;\n\t\t} else {\n\t\t\tshouldNegate = value & 1;\n\t\t\tvalue >>= 1;\n\n\t\t\tresult.push( shouldNegate ? -value : value );\n\n\t\t\t// reset\n\t\t\tvalue = shift = 0;\n\t\t}\n\t}\n\n\treturn result;\n}\n\nexport function encode ( value ) {\n\tvar result, i;\n\n\tif ( typeof value === 'number' ) {\n\t\tresult = encodeInteger( value );\n\t} else {\n\t\tresult = '';\n\t\tfor ( i = 0; i < value.length; i += 1 ) {\n\t\t\tresult += encodeInteger( value[i] );\n\t\t}\n\t}\n\n\treturn result;\n}\n\nfunction encodeInteger ( num ) {\n\tvar result = '', clamped;\n\n\tif ( num < 0 ) {\n\t\tnum = ( -num << 1 ) | 1;\n\t} else {\n\t\tnum <<= 1;\n\t}\n\n\tdo {\n\t\tclamped = num & 31;\n\t\tnum >>= 5;\n\n\t\tif ( num > 0 ) {\n\t\t\tclamped |= 32;\n\t\t}\n\n\t\tresult += integerToChar[ clamped ];\n\t} while ( num > 0 );\n\n\treturn result;\n}\n","export default function guessIndent ( code ) {\n\tconst lines = code.split( '\\n' );\n\n\tconst tabbed = lines.filter( line => /^\\t+/.test( line ) );\n\tconst spaced = lines.filter( line => /^ {2,}/.test( line ) );\n\n\tif ( tabbed.length === 0 && spaced.length === 0 ) {\n\t\treturn null;\n\t}\n\n\t// More lines tabbed than spaced? Assume tabs, and\n\t// default to tabs in the case of a tie (or nothing\n\t// to go on)\n\tif ( tabbed.length >= spaced.length ) {\n\t\treturn '\\t';\n\t}\n\n\t// Otherwise, we need to guess the multiple\n\tconst min = spaced.reduce( ( previous, current ) => {\n\t\tconst numSpaces = /^ +/.exec( current )[0].length;\n\t\treturn Math.min( numSpaces, previous );\n\t}, Infinity );\n\n\treturn new Array( min + 1 ).join( ' ' );\n}\n","import btoa from './btoa';\n\nclass SourceMap {\n\tconstructor ( properties ) {\n\t\tthis.version = 3;\n\n\t\tthis.file           = properties.file;\n\t\tthis.sources        = properties.sources;\n\t\tthis.sourcesContent = properties.sourcesContent;\n\t\tthis.names          = properties.names;\n\t\tthis.mappings       = properties.mappings;\n\t}\n\n\ttoString () {\n\t\treturn JSON.stringify( this );\n\t}\n\n\ttoUrl () {\n\t\treturn 'data:application/json;charset=utf-8;base64,' + btoa( this.toString() );\n\t}\n}\n\nexport default SourceMap;\n","let _btoa;\n\nif ( typeof window !== 'undefined' && typeof window.btoa === 'function' ) {\n\t_btoa = window.btoa;\n} else if ( typeof Buffer === 'function' ) {\n\t/* global Buffer */\n\t_btoa = str => new Buffer( str ).toString( 'base64' );\n} else {\n\tthrow new Error( 'Unsupported environment: `window.btoa` or `Buffer` should be supported.' );\n}\n\nexport default _btoa;\n"],"names":[],"mappings":"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"}